{"file":"useFavicon.mjs","mappings":";AAEO,SAAS,aAAa;AACrB,QAAA,UAAU,IAA4B,IAAI;AAChD,MAAI,gBAAuC;AAC3C,MAAI,cAAqC;AAGzC,QAAM,cAAc,MAAM;AAChB,YAAA,QAAiB,SAAA,cAAc,mBAAmB;AACtD,QAAA,CAAC,QAAQ,OAAO;AACV,cAAA,QAAiB,SAAA,cAAc,MAAM;AAC7C,cAAQ,MAAM,OAAO;AACrB,cAAQ,MAAM,MAAM;AACX,MAAA,SAAA,KAAK,YAAY,QAAQ,KAAK;AAAA,IAAA;AAAA,EAE3C;AAGM,QAAA,gBAAgB,CAAC,UAAkB;AACjC,UAAA,SAAkB,SAAA,cAAc,QAAQ;AAC9C,WAAO,QAAQ;AACf,WAAO,SAAS;AACV,UAAA,MAAM,OAAO,WAAW,IAAI;AAC9B,QAAA,CAAC,IAAY,QAAA;AAIjB,QAAI,SAAS,GAAG,GAAG,IAAI,EAAE;AAGzB,QAAI,YAAY;AAChB,QAAI,cAAc;AAGZ,UAAA,eAAe,MAAM,MAAM,WAAW;AAC5C,UAAM,UAAU,eAAe,WAAW,aAAa,CAAC,CAAC,IAAI;AAC7D,UAAM,aAAa;AACnB,UAAM,SAAS,KAAK,IAAI,GAAG,cAAc,IAAI,WAAW,GAAG;AAG3D,UAAM,UAAU;AAChB,UAAM,UAAU;AAChB,UAAM,UAAU;AAGhB,QAAI,UAAU;AACV,QAAA,IAAI,UAAU,UAAQ,GAAG,SAAS,QAAQ,GAAG,IAAI,KAAK,EAAE;AAC5D,QAAI,OAAO;AAGX,QAAI,UAAU;AACV,QAAA,IAAI,UAAU,UAAQ,GAAG,SAAS,QAAQ,GAAG,IAAI,KAAK,EAAE;AAC5D,QAAI,OAAO;AAEX,WAAO,OAAO,UAAU;AAAA,EAC1B;AAGA,QAAM,kBAAkB,MAAM;AAChB,gBAAA;AACR,QAAA,CAAC,QAAQ,MAAO;AAEpB,QAAI,UAAU;AACd,QAAI,aAAa;AAGb,QAAA,6BAA6B,aAAa;AAC1C,QAAA,0BAA0B,WAAW;AAGzC,oBAAgB,YAAY,MAAM;AAChC,UAAI,YAAY;AACH,mBAAA;AACX,YAAI,WAAW,GAAG;AACN,oBAAA;AACG,uBAAA;AAAA,QAAA;AAAA,MACf,OACK;AACM,mBAAA;AACX,YAAI,WAAW,KAAK;AACR,oBAAA;AACG,uBAAA;AAAA,QAAA;AAAA,MACf;AAGI,YAAA,QAAQ,mBAAmB,OAAO;AACxC,UAAI,QAAQ,OAAO;AACT,gBAAA,MAAM,OAAO,cAAc,KAAK;AAAA,MAAA;AAAA,OAEzC,EAAE;AAAA,EACP;AAGA,QAAM,qBAAqB,MAAM;AAC3B,QAAA,CAAC,QAAQ,MAAO;AAGpB,QAAI,eAAe;AACjB,oBAAc,aAAa;AACX,sBAAA;AAAA,IAAA;AAIV,YAAA,MAAM,OAAO,cAAc,SAAS;AAG5C,QAAI,UAAU;AACV,QAAA,0BAA0B,WAAW;AAEzC,kBAAc,WAAW,MAAM;AACvB,YAAA,eAAe,YAAY,MAAM;AAC1B,mBAAA;AACX,YAAI,WAAW,GAAG;AAChB,wBAAc,YAAY;AAE1B,cAAI,QAAQ,OAAO;AACT,oBAAA,MAAM,OAAO,cAAc,SAAS;AAAA,UAAA;AAE9C;AAAA,QAAA;AAEI,cAAA,QAAQ,mBAAmB,OAAO;AACxC,YAAI,QAAQ,OAAO;AACT,kBAAA,MAAM,OAAO,cAAc,KAAK;AAAA,QAAA;AAAA,SAEzC,EAAE;AAAA,OACJ,GAAG;AAAA,EACR;AAEO,SAAA;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;","names":[],"sources":["../../../../composables/useFavicon.ts"],"sourcesContent":["import { ref } from 'vue';\n\nexport function useFavicon() {\n  const favicon = ref<HTMLLinkElement | null>(null);\n  let blinkInterval: NodeJS.Timeout | null = null;\n  let fadeTimeout: NodeJS.Timeout | null = null;\n\n  // Initialize favicon reference\n  const initFavicon = () => {\n    favicon.value = document.querySelector(\"link[rel*='icon']\");\n    if (!favicon.value) {\n      favicon.value = document.createElement('link');\n      favicon.value.type = 'image/x-icon';\n      favicon.value.rel = 'shortcut icon';\n      document.head.appendChild(favicon.value);\n    }\n  };\n\n  // Create dynamic favicon\n  const createFavicon = (color: string) => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 32;\n    canvas.height = 32;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return '';\n\n    // Clear canvas with black background\n    // ctx.fillStyle = '#000000';\n    ctx.fillRect(0, 0, 32, 32);\n\n    // Set line width and stroke style\n    ctx.lineWidth = 2.5;\n    ctx.strokeStyle = color;\n\n    // Calculate circle size based on opacity for zoom effect\n    const opacityMatch = color.match(/[\\d.]+\\)$/);\n    const opacity = opacityMatch ? parseFloat(opacityMatch[0]) : 1;\n    const baseRadius = 7;\n    const radius = Math.max(1, baseRadius + (1 - opacity) * 1.5); // Ensure radius is always positive\n\n    // Center the circles more\n    const centerY = 16;\n    const spacing = 10;\n    const centerX = 16;\n\n    // Draw first O\n    ctx.beginPath();\n    ctx.arc(centerX - spacing/2, centerY, radius, 0, 2 * Math.PI);\n    ctx.stroke();\n\n    // Draw second O\n    ctx.beginPath();\n    ctx.arc(centerX + spacing/2, centerY, radius, 0, 2 * Math.PI);\n    ctx.stroke();\n\n    return canvas.toDataURL();\n  };\n\n  // Start processing animation\n  const startProcessing = () => {\n    initFavicon();\n    if (!favicon.value) return;\n\n    let opacity = 1;\n    let increasing = false;\n\n    // Clear any existing intervals\n    if (blinkInterval) clearInterval(blinkInterval);\n    if (fadeTimeout) clearTimeout(fadeTimeout);\n\n    // Create blinking effect\n    blinkInterval = setInterval(() => {\n      if (increasing) {\n        opacity += 0.1;\n        if (opacity >= 1) {\n          opacity = 1;\n          increasing = false;\n        }\n      } else {\n        opacity -= 0.1;\n        if (opacity <= 0.3) {\n          opacity = 0.3;\n          increasing = true;\n        }\n      }\n\n      const color = `rgba(200, 0, 0, ${opacity})`; // dark red\n      if (favicon.value) {\n        favicon.value.href = createFavicon(color);\n      }\n    }, 50);\n  };\n\n  // Complete processing animation\n  const completeProcessing = () => {\n    if (!favicon.value) return;\n\n    // Clear blinking interval\n    if (blinkInterval) {\n      clearInterval(blinkInterval);\n      blinkInterval = null;\n    }\n\n    // Show success flash\n    favicon.value.href = createFavicon('#00ff00'); // bright green\n\n    // Fade to black\n    let opacity = 1;\n    if (fadeTimeout) clearTimeout(fadeTimeout);\n    \n    fadeTimeout = setTimeout(() => {\n      const fadeInterval = setInterval(() => {\n        opacity -= 0.1;\n        if (opacity <= 0) {\n          clearInterval(fadeInterval);\n          // Reset to original favicon\n          if (favicon.value) {\n            favicon.value.href = createFavicon('#ffffff'); // white\n          }\n          return;\n        }\n        const color = `rgba(0, 255, 0, ${opacity})`;\n        if (favicon.value) {\n          favicon.value.href = createFavicon(color);\n        }\n      }, 50);\n    }, 500); // Wait before starting fade\n  };\n\n  return {\n    startProcessing,\n    completeProcessing\n  };\n}\n"],"version":3}